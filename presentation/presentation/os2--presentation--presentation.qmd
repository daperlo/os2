---
## Author
author:
  name: Люкшина Влада Алексеевна
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: 1132243022@rudn.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Презентация по теме AppArmor"
subtitle: "Обеспечение безопасности приложений в Linux"
license: CC BY
date: today
date-format: "2025-10-25"
---

# Информация

## Докладчик

:::::::::::::: {.columns align=center}
::: {.column width="70%"}

  * Люкшина Влада Алексеевна
  * 2 курс НПИбд-02-24
  * Прикладная информатика
  * Российский университет дружбы народов им. П. Лумумбы
  * [](mailto:1132243022@rudn.ru)
  * <https://github.com/LyukshinaVlada/study.git>

:::
::: {.column width="30%"}

:::
::::::::::::::

---

## Цели и задачи

- Рассмотреть модель доступа AppArmor и принципы её работы.
- Ознакомиться с архитектурой и компонентами AppArmor.
- Изучить различия DAC и MAC и их применение.
- Показать процесс создания и использования профилей безопасности.
- Показать примеры применения AppArmor в современных Linux-дистрибутивах.

---

# Введение

- Современные системы уязвимы к атакам, компрометации данных и несанкционированному доступу.
- Контроль доступа — ключевой механизм безопасности.
- AppArmor реализует мандатный контроль доступа (MAC), ограничивая возможности приложений.
- Цель: минимизация ущерба при компрометации приложений.

---

# История AppArmor

- Создана в конце 1990-х Immunix для UNIX-подобных систем.
- Изначально DAC не обеспечивал достаточной защиты.
- Введены профили безопасности для процессов.
- 2005 год — исходный код открыт, интеграция в Linux.
- Используется в SUSE Linux, Ubuntu и других дистрибутивах.

# ![История](image/1.png){#fig-008 width=70%}

---

# DAC vs MAC

- DAC (Discretionary Access Control): права определяет владелец.
- MAC (Mandatory Access Control): права определяются системой, пользователи не могут нарушать политику.
- AppArmor реализует MAC для процессов и приложений.

#![DAC vs MAC](image/2.png){#fig-008 width=70%}

---

# Различия DAC и MAC

| DAC | MAC |
|-----|-----|
| Дискреционный контроль доступа | Обязательный контроль доступа |
| Проще реализовать | Сложнее реализовать |
| Менее безопасен | Более безопасен |
| Владелец определяет доступ | Система определяет доступ |
| Гибкость | Жёсткие правила |
| Доверие пользователям | Доверие только администраторам |

---

# Архитектура AppArmor

Основные компоненты:
1. Модуль ядра — проверяет системные вызовы.
2. Пользовательские утилиты:
   - aa-status, aa-complain, aa-enforce, aa-logprof.
3. Профили безопасности — текстовые файлы в /etc/apparmor.d/.

- Path-based модель контроля доступа.
- Модульный подход для интеграции без изменения ядра.

#![Архитектура](image/sx.png){#fig-008 width=70%}

---

# LSM и AppArmor

- LSM (Linux Security Modules) позволяет подключать модели безопасности к ядру.
- AppArmor — один из LSM, реализующий MAC через пути.
- Основные конкуренты: SELinux, Domain Type Enforcement.

---

# Процесс соблюдения политики

1. Перехват системного вызова ядром.
2. Определение активного профиля AppArmor.
3. Сравнение запрашиваемых прав с разрешениями профиля.
4. Разрешение или блокировка действия.

---

# AppArmor и systemd

- При загрузке профили управляются systemd.
- apparmor_parser загружает ранние политики.
- Юнит apparmor.service отвечает за остальные профили.
- Для выгрузки используется aa-teardown.

---

# Профили безопасности AppArmor

- Текстовые файлы с правилами доступа для приложений.
- Режимы:
  - Enforcing — политика применяется, нарушения фиксируются.
  - Complain — нарушения фиксируются, но действия не блокируются.
- Ограничивают доступ к файлам, сети, IPC, возможностям процесса.

#![Архитектура](image/3.png){#fig-008 width=70%}

#![Архитектура](image/4.png){#fig-008 width=70%}


---

# Логи и аудит

- AppArmor фиксирует:
  - PID процесса
  - Имя процесса
  - Временная метка
  - Путь к ресурсу
  - Запрос действия
  - Имя профиля
- Позволяет отслеживать нарушения политики и анализировать события.

---

# Ограничения user namespace

- AppArmor может блокировать использование непривилегированных пространств имён.
- Предотвращает получение дополнительных возможностей процессами.
- Снижает поверхность атаки ядра.

---

# Установка и настройка
- В Ubuntu Server предустановлен базовый AppArmor.
- Дополнительные профили: /usr/share/apparmor/extra-profiles/
- Копируются в /etc/apparmor.d/ и могут быть изменены для настройки.
- Управление режимами: aa-enforce, aa-complain.

---

# Применение AppArmor

- Защита веб-серверов, баз данных, демонов.
- Ограничение контейнеров Docker и LXD.
- Изоляция пользователей и приложений в образовательных и корпоративных системах.

---

# Заключение

- AppArmor — эффективный инструмент защиты Linux.
- Простая конфигурация и высокая безопасность.
- Path-based профили делают систему прозрачной.
- Режим обучения безопасен для внедрения новых политик.
- Популярен в корпоративных и пользовательских системах.

---

## Итоговый слайд

### Список литературы

1. Ubuntu security documentation — https://documentation.ubuntu.com/  
2. AppArmor Documentation — Canonical Ltd. — https://gitlab.com/apparmor/apparmor  
3. Linux Kernel Security Modules: Overview and Comparison — Red Hat, 2023  
4. Difference between DAC and MAC — 19.09.2025 — https://www.geeksforgeeks.org/computer-networks/difference-between-dac-and-mac
