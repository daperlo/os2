---
## Author
author:
  name: Люкшина Влада Алексеевна
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: 1132243022@rudn.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: "Модель доступа AppArmor"
subtitle: "Управление SELinux"
license: "CC BY"
---

# Введение

Современные информационные системы характеризуются высокой степенью взаимосвязанности, сложной структурой и большим количеством критически важных сервисов. Это делает их уязвимыми к различным видам атак, включая эксплуатацию уязвимостей приложений, несанкционированный доступ к системным ресурсам и компрометацию данных. В таких условиях обеспечение информационной безопасности становится приоритетной задачей для системных администраторов, инженеров по безопасности и разработчиков программного обеспечения.

Контроль доступа является ключевым механизмом защиты, позволяющим ограничивать действия пользователей и приложений в пределах заранее установленных правил. Модели контроля доступа могут быть дискреционными (DAC), мандатными (MAC) и ролевыми (RBAC). AppArmor реализует принципы мандатного контроля доступа (MAC), обеспечивая высокий уровень безопасности по сравнению с DAC, которая основана на правах владельцев файлов.

AppArmor (Application Armor) позволяет создавать профили безопасности, описывающие, какие ресурсы — файлы, каталоги, сетевые интерфейсы — доступны конкретному приложению и в каком режиме: только чтение, запись или выполнение. Цель AppArmor — минимизация ущерба в случае компрометации приложения. Даже если злоумышленник получит контроль над процессом, он будет ограничен рамками профиля безопасности.

В отличие от SELinux, который использует контексты безопасности и сложные политики, AppArmor ориентирован на простоту настройки и прозрачность. Это делает его удобным для администраторов, особенно в средах, где требуется быстрое развертывание и поддержка системы безопасности. В этом реферате рассматриваются основные принципы работы AppArmor, его архитектура, возможности настройки, примеры профилей, сравнение с SELinux, а также практика применения в современных Linux-дистрибутивах.

---

# 1. История и предпосылки появления AppArmor

AppArmor был создан в конце 1990-х годов компанией Immunix для UNIX-подобных систем как ответ на необходимость эффективной защиты приложений при минимальной сложности настройки. На тот момент большинство систем использовали дискреционный контроль доступа (DAC), основанный на правах пользователей и групп. Этот подход не обеспечивал должного уровня безопасности, так как уязвимости в приложениях позволяли злоумышленникам получать доступ к ресурсам системы, обходя права владельцев файлов.

Компания Immunix предложила концепцию профилей безопасности для процессов, где каждому приложению назначается набор ограничений. Эти ограничения определяют, какие файлы, каталоги и устройства процесс может использовать. Если злоумышленник получает контроль над процессом, он ограничен рамками профиля, что снижает потенциальный ущерб. Такой подход существенно повышает безопасность по сравнению с DAC.

В 2005 году исходный код AppArmor был открыт, что позволило интегрировать его в ядро Linux и популярные дистрибутивы. Novell и Canonical активно поддерживали проект, включая AppArmor по умолчанию в SUSE Linux и Ubuntu соответственно. Простота настройки и модульная архитектура сделали AppArmor популярным инструментом как для серверов, так и для рабочих станций.

---

# 2. Дискреционное (DAC) vs Принудительное (MAC) управление доступом

DAC (Discretionary Access Control) — механизм контроля доступа, где сущность (пользователь, программа или группа) имеет конкретные разрешения на выполнение действий (чтение, запись, выполнение). Это традиционная модель Unix.

MAC (Mandatory Access Control) — механизм, где разрешения явно определяются политикой, и пользователь или программа не могут сделать больше, чем разрешено политикой.
Пример MAC: системная политика разрешает читать файл, но запрещает его редактировать.  
Пример DAC: пользователь имеет права на чтение и редактирование файла.

## 2.1 Различия DAC и MAC

DAC предлагает простоту и гибкость для общего использования, MAC обеспечивает строгую среду с высоким уровнем безопасности, такую как военные и государственные системы. AppArmor — система MAC, которая работает по принципу контроля разрешений приложений.

| DAC | MAC |
|-----|-----|
| Дискреционный контроль доступа | Обязательный контроль доступа |
| Проще реализовать | Сложнее реализовать |
| Менее безопасен | Более безопасен |
| Владелец определяет доступ и привилегии | Система определяет доступ и ограничивает ресурсы |
| Пользователи получают доступ на основе личности | Пользователи ограничены по уровню иерархии |
| Высокая гибкость без строгих правил | Жесткие правила и ограничения |
| Доверяет пользователям | Доверяет только администраторам |
| Решения основаны на идентификаторе пользователя | Решения основаны на объектах и задачах |
| Информационный поток невозможно контролировать | Информационный поток контролируется |
| Применим во всех доменах | Используется в армии, правительстве, разведке |
| Уязвим для троянских программ | Предотвращает переток вируса с высокого уровня на низкий |

---

# 3. Архитектура AppArmor

AppArmor — реализация Модуля безопасности Linux (LSM). Он использует модель управления на основе путей, где правила определяют разрешения для программ на основе шаблонов путей к файлам.

Компоненты архитектуры:
1. Модуль ядра — перехватывает системные вызовы и проверяет действия процессов на соответствие профилям; любые нарушения блокируются.  
2. Пользовательские утилиты:
   - aa-status — проверка состояния профилей;  
   - aa-complain / aa-enforce — переключение режимов;  
   - aa-logprof — анализ логов и корректировка профилей.  
3. Профили безопасности — текстовые файлы в /etc/apparmor.d/, задают разрешения для приложений. Ниже представлена общая архитектурная схема

![Архитектурная схема](image/1.png){#fig-001 width=70%}

## 3.1 Платформа LSM

До появления LSM в Linux доминировала модель DAC. Для корпоративных и правительственных систем требовались более строгие механизмы контроля, что привело к разработке SELinux, AppArmor и Domain Type Enforcement. LSM — это платформа ядра Linux, позволяющая различным моделям безопасности подключаться к ядру и обеспечивать контроль доступа.

## 3.2 Процесс соблюдения политики

При вызове системного вызова ядро:
1. Перехватывает операцию;  
2. Определяет активный профиль AppArmor для процесса;  
3. Сравнивает запрашиваемые права с разрешениями в профиле;  
4. Разрешает или отклоняет запрос.

## 3.3 AppArmor и systemd

При загрузке профили AppArmor управляются systemd. Он вызывает apparmor_parser для загрузки профилей из /etc/apparmor/earlypolicy/. Если ранняя политика отсутствует, остальные загружаются через юнит apparmor.service. Для выгрузки профилей используется aa-teardown.

---

# 4. Профили безопасности AppArmor

Профиль — текстовый файл с правилами доступа для приложения. Режимы работы:

1. Enforcing (Применение) — политика применяется, нарушения фиксируются в логах;  
2. Complain (Жалобы) — нарушения фиксируются, но действия не блокируются.

### 4.1 Логи аудита

AppArmor фиксирует:
- PID процесса;  
- имя процесса;  
- временную метку;  
- путь к ресурсу;  
- запрошенное действие;  
- имя профиля.

### 4.2 Ограничения user namespace

AppArmor может запрещать непривилегированным приложениям использовать пользовательские пространства имён, предотвращая получение дополнительных возможностей и снижая поверхность атаки ядра.

---

# 5. Установка и настройка AppArmor

Базовые элементы AppArmor предустановлены в Ubuntu Server. Инструменты управления и набор дополнительных профилей устанавливаются отдельно.

![Установка](image/2.png){#fig-001 width=70%}

Перед настройкой необходимо проверить статус

![Статус](image/3.png){#fig-001 width=70%}

В последних строках указаны режимы enforce и complain. Содержимое пакета apparmor-profiles находится в папке /usr/share/apparmor/extra-profiles/, готовых профилей там больше ста

![Режим работы](image/4.png){#fig-001 width=70%}

Перед тем как профиль станет активным необходимо перенести его из папки /usr/share/apparmor/extra-profiles/ в /etc/apparmor.d/. Теперь его можно изучить и при желании изменить. Возьмем что-нибудь попроще, например, /etc/apparmor.d/bin.ping

![Изучение](image/5.png){#fig-001 width=70%}

 Профили копируются из /usr/share/apparmor/extra-profiles/ в /etc/apparmor.d/ и могут быть изменены для адаптации под конкретные приложения.

---

# Заключение
AppArmor — эффективный инструмент защиты Linux. Он сочетает простоту конфигурации с высокой степенью безопасности. Использование профилей на основе путей делает систему прозрачной и понятной. Режим обучения позволяет безопасно внедрять новые политики. AppArmor способен надежно ограничивать действия приложений и минимизировать последствия потенциальных атак. Несмотря на ограничения, AppArmor остаётся популярным инструментом в корпоративных и пользовательских Linux-системах.

---

## Список литературы{.unnumbered}

1. Ubuntu security documentation — https://documentation.ubuntu.com/  
2. AppArmor Documentation — Canonical Ltd. — https://gitlab.com/apparmor/apparmor  
3. Linux Kernel Security Modules: Overview and Comparison — Red Hat, 2023  
4. Difference between DAC and MAC — 19.09.2025 — https://www.geeksforgeeks.org/computer-networks/difference-between-dac-and-mac
